{"version":3,"file":"static/js/610.19b02c8d.chunk.js","mappings":"0PAQO,SAASA,IAEZ,OAAsBC,EAAAA,EAAAA,UAAS,GAAE,eAA5BC,EAAI,KAAEC,EAAO,KAClB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAAvCG,EAAS,KAAEC,EAAY,KAC5B,GAAsCJ,EAAAA,EAAAA,UAAS,IAAG,eAA7CK,EAAY,KAAEC,EAAe,KAClC,GAAoCN,EAAAA,EAAAA,UAAS,IAAG,eAA3CO,EAAW,KAAEC,EAAc,KAChC,GAAoCR,EAAAA,EAAAA,UAAS,IAAG,eAA3CS,EAAW,KAAEC,EAAc,KAChC,GAGIC,EAAAA,EAAAA,IAAyB,CAACR,EAAWE,EAAcE,EAAaE,EAAaR,IAFvEW,EAAa,EAAnBC,KACAC,EAAK,EAALA,MAEJ,OAAQ,gBAAKC,UAAWC,EAAAA,EAAAA,SAAW,UAE/B,UAAC,IAAS,CAACC,SAAU,KAAK,WACtB,iBAAKF,UAAWC,EAAAA,EAAAA,iBAAmB,WAC/B,kBAAOE,KAAK,OAAOC,YAAa,oBACzBC,SAAU,SAACC,GACPjB,EAAaiB,EAAEC,OAAOC,OACtBrB,EAAQ,EACZ,EAAGqB,MAAOpB,KAEjB,oBAAQiB,SAAU,SAACC,GACff,EAAgBe,EAAEC,OAAOC,OACzBrB,EAAQ,EACZ,EAAGsB,KAAK,UAAUC,GAAG,iBAAgB,WACjC,mBAAQF,MAAM,GAAE,sBAChB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,UAAS,sBACvB,mBAAQA,MAAM,gBAAe,4BAC7B,mBAAQA,MAAM,wBAAuB,oCACrC,mBAAQA,MAAM,WAAU,uBACxB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,SAAQ,qBACtB,mBAAQA,MAAM,aAAY,yBAC1B,mBAAQA,MAAM,UAAS,yBAG3B,oBAAQH,SAAU,SAACC,GACfb,EAAea,EAAEC,OAAOC,OACxBrB,EAAQ,EACZ,EAAGsB,KAAK,SAASC,GAAG,gBAAe,WAC/B,mBAAQF,MAAM,GAAE,qBAChB,mBAAQA,MAAM,SAAQ,qBACtB,mBAAQA,MAAM,OAAM,mBACpB,mBAAQA,MAAM,UAAS,sBACvB,mBAAQA,MAAM,aAAY,4BAI9B,oBAAQH,SAAU,SAACC,GACfX,EAAeW,EAAEC,OAAOC,OACxBrB,EAAQ,EACZ,EAAGsB,KAAK,SAASC,GAAG,gBAAgBN,YAAa,gBAAgB,WAC7D,mBAAQI,MAAM,GAAE,qBAChB,mBAAQA,MAAM,QAAO,oBACrB,mBAAQA,MAAM,OAAM,mBACpB,mBAAQA,MAAM,UAAS,4BAG/B,gBAAKR,UAAS,cAAgB,SACzBD,GACG,8CACa,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAec,QAAQC,KAAI,SAAAC,GAAa,OACpC,SAAC,IAAa,CACCf,KAAMe,GADDA,EAAcH,GAEhC,OAGd,iBAAKV,UAAS,mBAAqB,WACjB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeiB,KAAKC,QAAShB,IAC1B,SAAC,IAAM,CAACiB,QAAQ,YAAYC,KAAM,QAASC,GAAI,CAACC,SAAU,OAAQC,WAAY,aACtEC,QAAS,WACLlC,IAAUD,EACd,EAAE,mBACA,OAAbW,QAAa,IAAbA,OAAa,EAAbA,EAAeiB,KAAKQ,QAASvB,IAC1B,SAAC,IAAM,CAACiB,QAAQ,YAAYC,KAAM,QAASC,GAAI,CAACC,SAAU,OAAQC,WAAY,aACtEC,QAAS,WACLlC,IAAUD,EACd,EAAE,yBAK9B,C,qBC3FA,KAAgB,oBAAsB,sCAAsC,iBAAmB,mC","sources":["Pages/HomePage/HomePage.tsx","webpack://rickandmorty/./src/Pages/HomePage/HomePage.module.css?8472"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useGetAllCharactersQuery} from \"../../store/api/characters\";\r\nimport CharacterCard from \"../../Components/CharacterCard/CharacterCard\";\r\nimport '../../Assets/css/GeneralCss.css'\r\nimport c from './HomePage.module.css'\r\nimport {Button, Container} from \"@mui/material\";\r\n\r\n\r\nexport function HomePage() {\r\n\r\n    let [page, setPage] = useState(1)\r\n    let [inputName, setInputName] = useState('')\r\n    let [inputSpecies, setInputSpecies] = useState('')\r\n    let [inputGender, setInputGender] = useState('')\r\n    let [inputStatus, setInputStatus] = useState('')\r\n    const {\r\n        data: allCharacters,\r\n        error\r\n    } = useGetAllCharactersQuery([inputName, inputSpecies, inputGender, inputStatus, page])\r\n    return (<div className={c.HomePage}>\r\n\r\n        <Container maxWidth={'lg'}>\r\n            <div className={c.HomePage__filter}>\r\n                <input type=\"text\" placeholder={'Filter by name...'}\r\n                       onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                           setInputName(e.target.value);\r\n                           setPage(1)\r\n                       }} value={inputName}/>\r\n\r\n                <select onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\r\n                    setInputSpecies(e.target.value)\r\n                    setPage(1)\r\n                }} name=\"Species\" id=\"Species-select\">\r\n                    <option value=\"\">Species</option>\r\n                    <option value=\"Human\">Human</option>\r\n                    <option value=\"Alien\">Alien</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                    <option value=\"Poopybutthole\">Poopybutthole</option>\r\n                    <option value=\"Mythological Creature\">Mythological Creature</option>\r\n                    <option value=\"Humanoid\">Humanoid</option>\r\n                    <option value=\"Robot\">Robot</option>\r\n                    <option value=\"Animal\">Animal</option>\r\n                    <option value=\"Cronenberg\">Cronenberg</option>\r\n                    <option value=\"Disease\">Disease</option>\r\n                </select>\r\n\r\n                <select onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\r\n                    setInputGender(e.target.value)\r\n                    setPage(1)\r\n                }} name=\"gender\" id=\"gender-select\">\r\n                    <option value=\"\">Gender</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                    <option value=\"Genderless\">Genderless</option>\r\n                </select>\r\n\r\n\r\n                <select onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\r\n                    setInputStatus(e.target.value)\r\n                    setPage(1)\r\n                }} name=\"status\" id=\"status-select\" placeholder={'Choose status'}>\r\n                    <option value=\"\">Status</option>\r\n                    <option value=\"Alive\">Alive</option>\r\n                    <option value=\"Dead\">Dead</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                </select>\r\n            </div>\r\n            <div className={`CardGallery`}>\r\n                {error ?\r\n                    <h1>No such creatures</h1> :\r\n                    allCharacters?.results.map(characterData => (\r\n                        <CharacterCard key={characterData.id}\r\n                                       data={characterData}\r\n                        />))\r\n                }\r\n            </div>\r\n            <div className={`PaginatorButtons`}>\r\n                {allCharacters?.info.prev && !error &&\r\n                    <Button variant=\"contained\" size={'large'} sx={{fontSize: '2rem', fontFamily: 'RickMorty',}}\r\n                            onClick={() => {\r\n                                setPage(--page)\r\n                            }}>Prev</Button>}\r\n                {allCharacters?.info.next && !error &&\r\n                    <Button variant=\"contained\" size={'large'} sx={{fontSize: '2rem', fontFamily: 'RickMorty'}}\r\n                            onClick={() => {\r\n                                setPage(++page)\r\n                            }}>Next</Button>}\r\n            </div>\r\n\r\n        </Container>\r\n    </div>)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"HomePage__paginator\":\"HomePage_HomePage__paginator__Kk3MV\",\"HomePage__filter\":\"HomePage_HomePage__filter__EpSTP\"};"],"names":["HomePage","useState","page","setPage","inputName","setInputName","inputSpecies","setInputSpecies","inputGender","setInputGender","inputStatus","setInputStatus","useGetAllCharactersQuery","allCharacters","data","error","className","c","maxWidth","type","placeholder","onChange","e","target","value","name","id","results","map","characterData","info","prev","variant","size","sx","fontSize","fontFamily","onClick","next"],"sourceRoot":""}