{"version":3,"file":"static/js/141.9b2df12f.chunk.js","mappings":"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","sources":["webpack://rickandmorty/./src/Components/CharacterCard/CharacterCard.module.css?ba79","Components/CharacterCard/CharacterCard.tsx","Pages/HomePage/HomePage.tsx","webpack://rickandmorty/./src/Pages/HomePage/HomePage.module.css?8472"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CharacterCard\":\"CharacterCard_CharacterCard__lx22d\",\"CharacterCard__info\":\"CharacterCard_CharacterCard__info__Vq8j6\",\"info__name\":\"CharacterCard_info__name__UJCp7\",\"info__species\":\"CharacterCard_info__species__sFaBU\"};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport c from './CharacterCard.module.css'\r\nimport {ICharacter} from \"../../interface\";\r\n\r\nconst CharacterCard= ({data}:{data:ICharacter})=>{\r\n    return(<div className={c.CharacterCard}>\r\n        <Link to={`/character/${data.id}`}>\r\n            <img src={data.image} alt={''} style={{width:'100%'}}/>\r\n        </Link>\r\n        <div className={c.CharacterCard__info}>\r\n            <p className={c.info__name}>{data.name}</p>\r\n            <p className={c.info__species}>{data.species}</p>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default React.memo(CharacterCard)","import React, {useState} from \"react\";\r\nimport { useGetAllCharactersQuery} from \"../../store/api/characters\";\r\nimport CharacterCard from \"../../Components/CharacterCard/CharacterCard\";\r\nimport '../../Assets/css/CardCss.css'\r\nimport c from './HomePage.module.css'\r\nimport {Button, Container} from \"@mui/material\";\r\n\r\n\r\nexport function HomePage () {\r\n\r\n    let [page, setPage] = useState(1)\r\n    let [inputName, setInputName] = useState('')\r\n    let [inputSpecies, setInputSpecies] = useState('')\r\n    let [inputGender, setInputGender] = useState('')\r\n    let [inputStatus, setInputStatus] = useState('')\r\n\r\n        const {data: allCharacters, isLoading, error} = useGetAllCharactersQuery([inputName,inputSpecies,inputGender,inputStatus,page])\r\n\r\n    if (isLoading) return <h1>Loading data...</h1>\r\n\r\n    return (<div className={c.HomePage}>\r\n\r\n        <Container maxWidth={'lg'}>\r\n            <div className={c.HomePage__filter}>\r\n                <input type=\"text\" placeholder={'Filter by name...'}\r\n                       onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                           setInputName(e.target.value);\r\n                       }} value={inputName}/>\r\n\r\n                <select onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>{setInputSpecies(e.target.value)}} name=\"Species\" id=\"Species-select\">\r\n                    <option value=\"\">Species</option>\r\n                    <option value=\"Human\">Human</option>\r\n                    <option value=\"Alien\">Alien</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                    <option value=\"Poopybutthole\">Poopybutthole</option>\r\n                    <option value=\"Mythological Creature\">Mythological Creature</option>\r\n                    <option value=\"Humanoid\">Humanoid</option>\r\n                    <option value=\"Robot\">Robot</option>\r\n                    <option value=\"Animal\">Animal</option>\r\n                    <option value=\"Cronenberg\">Cronenberg</option>\r\n                    <option value=\"Disease\">Disease</option>\r\n                </select>\r\n\r\n                <select onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>{setInputGender(e.target.value)}} name=\"gender\" id=\"gender-select\">\r\n                    <option value=\"\">Gender</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                    <option value=\"Genderless\">Genderless</option>\r\n                </select>\r\n\r\n\r\n                <select onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>{setInputStatus(e.target.value)}} name=\"status\" id=\"status-select\" placeholder={'Choose status'}>\r\n                    <option value=\"\">Status</option>\r\n                    <option value=\"Alive\">Alive</option>\r\n                    <option value=\"Dead\">Dead</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                </select>\r\n            </div>\r\n            <div className={`CardGallery`}>\r\n                {error?\r\n                    <h1>No such creatures</h1>:\r\n                    allCharacters?.results.map(characterData => (\r\n                        <CharacterCard key={characterData.id}\r\n                                       data={characterData}\r\n                        />))\r\n                }\r\n            </div>\r\n            <div className={c.HomePage__paginator}>\r\n                {allCharacters?.info.prev && !error &&\r\n                    <Button variant=\"contained\" size={'large'} sx={{fontSize: '2rem', fontFamily: 'RickMorty',}}\r\n                            onClick={() => {\r\n                                setPage(--page)\r\n                            }}>Prev</Button>}\r\n                {allCharacters?.info.next && !error &&\r\n                    <Button variant=\"contained\" size={'large'} sx={{fontSize: '2rem', fontFamily: 'RickMorty'}}\r\n                            onClick={() => {\r\n                                setPage(++page)\r\n                            }}>Next</Button>}\r\n            </div>\r\n\r\n        </Container>\r\n    </div>)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"HomePage__paginator\":\"HomePage_HomePage__paginator__Kk3MV\",\"HomePage__filter\":\"HomePage_HomePage__filter__EpSTP\"};"],"names":["CharacterCard","data","className","c","to","id","src","image","alt","style","width","name","species","React","HomePage","useState","page","setPage","inputName","setInputName","inputSpecies","setInputSpecies","inputGender","setInputGender","inputStatus","setInputStatus","useGetAllCharactersQuery","allCharacters","isLoading","error","Container","maxWidth","type","placeholder","onChange","e","target","value","results","map","characterData","info","prev","Button","variant","size","sx","fontSize","fontFamily","onClick","next"],"sourceRoot":""}